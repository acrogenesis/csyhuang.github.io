<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-05-13T17:14:44-05:00</updated><id>http://localhost:4000/</id><title type="html">Shao Ying (Clare) Huang</title><subtitle>PhD candidate (Atmospheric Sciences) in UChicago. Love coding, music and writing.</subtitle><author><name>Shao Ying (Clare) Huang</name><email>clare1068@gmail.com</email></author><entry><title type="html">Switching to Jekyll</title><link href="http://localhost:4000/2017/05/12/switching-to-jekyll/" rel="alternate" type="text/html" title="Switching to Jekyll" /><published>2017-05-12T00:00:00-05:00</published><updated>2017-05-12T00:00:00-05:00</updated><id>http://localhost:4000/2017/05/12/switching-to-jekyll</id><content type="html" xml:base="http://localhost:4000/2017/05/12/switching-to-jekyll/">&lt;p&gt;I’m switching from a traditional html webpage builder to Jekyll user! Hope to update more often!&lt;/p&gt;

&lt;p&gt;I set up Jekyll in my Mac OS X with &lt;a href=&quot;http://brew.sh&quot;&gt;homebrew&lt;/a&gt;,  &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; and &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To see how to set jekyll up on Windows, refer to my &lt;a href=&quot;/2017/02/12/jekyll-on-windows/&quot;&gt;older post&lt;/a&gt;.&lt;/p&gt;</content><author><name>Shao Ying (Clare) Huang</name><email>clare1068@gmail.com</email></author><summary type="html">I’m switching from a traditional html webpage builder to Jekyll user! Hope to update more often! I set up Jekyll in my Mac OS X with homebrew, rbenv and RubyGems. To see how to set jekyll up on Windows, refer to my older post.</summary></entry><entry><title type="html">Installation of Jekyll on Windows 10</title><link href="http://localhost:4000/2017/02/12/jekyll-on-windows/" rel="alternate" type="text/html" title="Installation of Jekyll on Windows 10" /><published>2017-02-12T00:00:00-06:00</published><updated>2017-02-12T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/12/jekyll-on-windows</id><content type="html" xml:base="http://localhost:4000/2017/02/12/jekyll-on-windows/">&lt;p&gt;Below are the procedures I used to install Jekyll with problem solvers:&lt;/p&gt;

&lt;p&gt;Main reference sites:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/windows/&quot;&gt;Jekyll on Windows&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/&quot;&gt;Easily install Jekyll on Windows with 3 command prompt entries and Chocolatey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Procedures:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open Powershell&lt;/li&gt;
  &lt;li&gt;Run Powershell as administrator: [&lt;a href=&quot;http://stackoverflow.com/questions/7690994/powershell-running-a-command-as-administrator&quot;&gt;Reference&lt;/a&gt;]
    &lt;blockquote&gt;
      &lt;p&gt;Start-Process powershell -Verb runAs&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Change execution policy to enable installation of Chocolatey (a package manager): [&lt;a href=&quot;http://stackoverflow.com/questions/4037939/powershell-says-execution-of-scripts-is-disabled-on-this-system&quot;&gt;Reference&lt;/a&gt;]
    &lt;blockquote&gt;
      &lt;p&gt;Set-ExecutionPolicy RemoteSigned&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Installing Chocolatey: [&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Reference&lt;/a&gt;]
    &lt;blockquote&gt;
      &lt;p&gt;iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Update the certificate to install ruby: [&lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/&quot;&gt;Reference&lt;/a&gt;]&lt;br /&gt;
&lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/&quot;&gt;http://guides.rubygems.org/ssl-certificate-update/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Install ruby:
    &lt;blockquote&gt;
      &lt;p&gt;choco install ruby -y&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Close the window and open a new command prompt with Administrator access (i.e. step 2)&lt;/li&gt;
  &lt;li&gt;Install gem bundler
    &lt;blockquote&gt;
      &lt;p&gt;gem install bundler&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Jekyll
    &lt;blockquote&gt;
      &lt;p&gt;gem install jekyll&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Done :)&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Shao Ying (Clare) Huang</name><email>clare1068@gmail.com</email></author><summary type="html">Below are the procedures I used to install Jekyll with problem solvers: Main reference sites: Jekyll on Windows Easily install Jekyll on Windows with 3 command prompt entries and Chocolatey Procedures: Open Powershell Run Powershell as administrator: [Reference] Start-Process powershell -Verb runAs Change execution policy to enable installation of Chocolatey (a package manager): [Reference] Set-ExecutionPolicy RemoteSigned Installing Chocolatey: [Reference] iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex Update the certificate to install ruby: [Reference] http://guides.rubygems.org/ssl-certificate-update/ Install ruby: choco install ruby -y Close the window and open a new command prompt with Administrator access (i.e. step 2) Install gem bundler gem install bundler Install Jekyll gem install jekyll Done :)</summary></entry><entry><title type="html">Installing Python Library for downloading ERA-Interim Data</title><link href="http://localhost:4000/2016/06/13/ECMWF-download/" rel="alternate" type="text/html" title="Installing Python Library for downloading ERA-Interim Data" /><published>2016-06-13T00:00:00-05:00</published><updated>2016-06-13T00:00:00-05:00</updated><id>http://localhost:4000/2016/06/13/ECMWF-download</id><content type="html" xml:base="http://localhost:4000/2016/06/13/ECMWF-download/">&lt;p&gt;(1) Installing the package requires the python Setuptools. You can set it up locally with the command:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;wget https://bootstrap.pypa.io/ez_setup.py -O - | python - –user&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(2) Download the Python library package and unzip it (You can do it in any directory)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;wget https://software.ecmwf.int/wiki/download/attachments/56664858/ecmwf-api-client-python.tgz
tar zxf ecmwf-api-client-python.tgz&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You shall see four items extracted:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;example.py&lt;/li&gt;
  &lt;li&gt;ecmwfapi/&lt;strong&gt;init&lt;/strong&gt;.py&lt;/li&gt;
  &lt;li&gt;ecmwfapi/api.py&lt;/li&gt;
  &lt;li&gt;setup.py&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(3) In the directory with these four items, install the package with:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;python setup.py install –user&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(4) To use the sample script, you need an API key ( .ecmwfapirc ) placed in your home directory. You can retrieve that by logging in: https://api.ecmwf.int/v1/key/
Create a file named “.ecmwfapirc” in your home directory and put in the content shown on the page:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.ecmwf.int/v1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(...)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(...)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(5) After doing that, in the directory with the sample script example.py, you can test the package by running it:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;python example.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should see it successfully retrieves a .grib file if the package has been set up properly.&lt;/p&gt;

&lt;p&gt;(6) To download python script for retrieving ERA-Interim netCDF files, there are sample script available here (look under “Same request NetCDF format”):
[https://software.ecmwf.int/wiki/display/WEBAPI/Python+ERA-interim+examples]&lt;/p&gt;

&lt;p&gt;In fact, on the ECMWF Public Dataset web interface page you retrieve ERA-Interim data, after you select the subset of data, instead of pressing “Retrieve NetCDF”, there is another button named “View the MARS request”, and it will show how the python script for retrieving that dataset looks like.&lt;/p&gt;

&lt;p&gt;I learnt the above steps on these pages:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://software.ecmwf.int/wiki/display/WEBAPI/Access+ECMWF+Public+Datasets#AccessECMWFPublicDatasets-python&quot;&gt;ECMWF python library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot;&gt;Python setuptool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shao Ying (Clare) Huang</name><email>clare1068@gmail.com</email></author><summary type="html">(1) Installing the package requires the python Setuptools. You can set it up locally with the command: wget https://bootstrap.pypa.io/ez_setup.py -O - | python - –user (2) Download the Python library package and unzip it (You can do it in any directory) wget https://software.ecmwf.int/wiki/download/attachments/56664858/ecmwf-api-client-python.tgz tar zxf ecmwf-api-client-python.tgz You shall see four items extracted: example.py ecmwfapi/init.py ecmwfapi/api.py setup.py (3) In the directory with these four items, install the package with: python setup.py install –user (4) To use the sample script, you need an API key ( .ecmwfapirc ) placed in your home directory. You can retrieve that by logging in: https://api.ecmwf.int/v1/key/ Create a file named “.ecmwfapirc” in your home directory and put in the content shown on the page: { &quot;url&quot; : &quot;https://api.ecmwf.int/v1&quot;, &quot;key&quot; : &quot;(...)&quot;, &quot;email&quot; : &quot;(...)&quot; } (5) After doing that, in the directory with the sample script example.py, you can test the package by running it: python example.py You should see it successfully retrieves a .grib file if the package has been set up properly. (6) To download python script for retrieving ERA-Interim netCDF files, there are sample script available here (look under “Same request NetCDF format”): [https://software.ecmwf.int/wiki/display/WEBAPI/Python+ERA-interim+examples] In fact, on the ECMWF Public Dataset web interface page you retrieve ERA-Interim data, after you select the subset of data, instead of pressing “Retrieve NetCDF”, there is another button named “View the MARS request”, and it will show how the python script for retrieving that dataset looks like. I learnt the above steps on these pages: ECMWF python library Python setuptool</summary></entry></feed>